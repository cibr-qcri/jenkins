jenkins:
  systemMessage: "CIBR CICD Jenkins Deployment"               
  securityRealm:
    local:
      allowsSignup: false
      users:
       - id: ${JENKINS_ADMIN_ID}
         password: ${JENKINS_ADMIN_PASSWORD}
  authorizationStrategy: loggedInUsersCanDoAnything
  remotingSecurity:
    enabled: true
credentials:
  system:
    domainCredentials:
      - credentials:
          - string:
              scope: GLOBAL
              id: slack-token
              secret: '${SLACK_TOKEN}'
              description: Slack token
          - string:
              scope: GLOBAL
              id: gp-username
              secret: '${GP_USER}'
              description: Greenplum Username
          - string:
              scope: GLOBAL
              id: gp-password
              secret: '${GP_PASSWORD}'
              description: Greenplum Password
          - string:
              scope: GLOBAL
              id: arango-username
              secret: '${ARANGO_USER}'
              description: ArangoDB Username
          - string:
              scope: GLOBAL
              id: arango-password
              secret: '${ARANGO_PASSWORD}'
              description: ArangoDB Password
          - string:
              scope: GLOBAL
              id: smtp-password
              secret: '${SMTP_PASSWORD}'
              description: SMTP Password
          - string:
              scope: GLOBAL
              id: jwt-secret
              secret: '${JWT_SECRET}'
              description: JWT Secret
          - string:
              scope: GLOBAL
              id: amplitude-key
              secret: '${AMPLITUDE_PROD_API_KEY}'
              description: Amplitude Key
          - usernamePassword:
              scope: GLOBAL
              id: "github-credentials"
              username: ${GITHUB_BOT_USERNAME}
              password: ${GITHUB_BOT_PASSWORD}
              description: "Username/Token Credentials for GitHub"
unclassified:
  location:
    url: ${JENKINS_URL}
    adminAddress: ${JENKINS_ADMIN_EMAIL_ADDRESS}
  slackNotifier:
    teamDomain: cibr-qcri
    tokenCredentialId: slack-token
jobs:
  - script: >
      freeStyleJob('toshi-build') {
        description('Toshi - wallet explorer build job')
        triggers {
          githubPush()
          githubPullRequest {
              useGitHubHooks()
              triggerPhrase('OK to test')
              permitAll()
              extensions {
                  commitStatus {
                      context('CIBR Jenkins Builder')
                      triggeredStatus('Starting deployment to staging site...')
                      startedStatus('Deploying to staging site...')
                      completedStatus('SUCCESS', 'Build succeeded!')
                      completedStatus('FAILURE', 'Build failed. ')
                      completedStatus('PENDING', 'Still in progress...')
                      completedStatus('ERROR', 'Build errored. This is probably a problem with Jenkins or related infrastructure and not an issue with your code changes.')
                  }
                  buildStatus {
                    completedStatus('SUCCESS', 'There were no errors, go have a cup of coffee...')
                    completedStatus('FAILURE', 'There were errors, for info, please see...')
                    completedStatus('ERROR', 'There was an error in the infrastructure, please contact...')
                  }
              }
          }
          genericTrigger {
            genericVariables {
              genericVariable {
              key("IS_PR_MERGED")
              value("\$.pull_request.merged")
              expressionType("JSONPath")
              regexpFilter("")
              }
              genericVariable {
              key("IS_PUSH")
              value("\$.repository.pushed_at")
              expressionType("JSONPath")
              regexpFilter("")
              }
            }
            printPostContent(true)
            regexpFilterText('$action#$draft_pr')
            regexpFilterExpression('(reopened|opened|synchronize|ready_for_review)#(false)')
          }
        }
        scm {
          git {
            remote { 
              github('cibr-qcri/jenkins')
              refspec('+refs/pull/*:refs/remotes/origin/pr/*')
              credentials('github-credentials')
              url('https://github.com/cibr-qcri/jenkins.git')
            }
            branch('${sha1}')
          }
        }
        wrappers {
          credentialsBinding {
            string('SLACK_TOKEN', 'slack-token')
            string('GP_PASSWORD', 'gp-password')
          }
        }
        steps {
          shell('''#!/bin/bash
             echo "Bulding Toshi...."
             docker-compose -f docker-compose.dev.yml build
             echo "isMerged -- $IS_PR_MERGED"
             echo "isPush -- $IS_PUSH"
          ''')
        }
        publishers {
            mergeGithubPullRequest {
                disallowOwnCode()
                failOnNonMerge()
                deleteOnMerge()
            }
        }
      }

  - script: >
      freeStyleJob('dizzy-build') {
        description('Dizzy - darkweb engine build job')
        triggers {
          githubPush()
        }
        scm {
          git {
            remote { 
              url('https://github.com/cibr-qcri/dizzy.git')
            }
            branch 'main'
          }
        }
      }

  - script: >
      freeStyleJob('kansa-build') {
        description('Kansa - smart contract analysis build job')
        triggers {
          githubPush()
        }
        scm {
          git {
            remote { 
              url('https://github.com/cibr-qcri/kansa.git')
            }
            branch 'main'
          }
        }
      }
tool:
  git:
    installations:
      - name: Default
        home: "/usr/bin/git"


